version: '3.1'

services:
  zoo1:
    image: zookeeper:3.5
    restart: always
    hostname: zoo1
    ports:
      - 2181:2181

    networks:
      - as-dev-swarm
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181

  zoo2:
    image: zookeeper:3.5
    restart: always
    hostname: zoo2
    ports:
      - 2182:2181
    networks:
      - as-dev-swarm
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=0.0.0.0:2888:3888;2181 server.3=zoo3:2888:3888;2181

  zoo3:
    image: zookeeper:3.5
    restart: always
    hostname: zoo3
    ports:
      - 2183:2181
    networks:
      - as-dev-swarm
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=0.0.0.0:2888:3888;2181

  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    ports:
      - "9092:9092"
      - "1099:1099"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 10.8.32.240
      KAFKA_CREATE_TOPICS: "dockerinsdiekafka-test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo1:2182,zoo1:2183
      JMX_PORT: 1099
    networks:
      - as-dev-swarm
  # docker run -itd --name=kafka-manager -p 9000:9000 -e ZK_HOSTS="192.168.220.150:2181" sheepkiller/kafka-manager
  kafka_manager:
    image: kafkamanager/kafka-manager
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "9093:9000"
    networks:
      - as-dev-swarm
    environment:
          ZK_HOSTS: zoo1:2181
    
networks:
  as-dev-swarm:
    external: true